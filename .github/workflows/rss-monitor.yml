name: RSS Monitor with Gemini Analysis

on:
  # schedule:
  #   - cron: '0 * * * *'  # 毎時0分に実行（1時間間隔）
  workflow_dispatch:

concurrency:
  group: rss-monitor
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  # Job1: RSS取得・差分検出
  rss-trigger:
    runs-on: ubuntu-latest
    outputs:
      # 新着記事があるかの真偽値
      has-new-articles: ${{ steps.detect-new.outputs.has-new-articles }}
      # 新着記事の数
      new-articles-count: ${{ steps.detect-new.outputs.new-articles-count }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install RSS parser
      run: npm install rss-parser

    - name: Fetch and detect new articles
      id: detect-new
      run: node scripts/rss-processor.js

    - name: Upload new articles data
      if: steps.detect-new.outputs.has-new-articles == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: new-articles
        path: new-articles.json

    - name: Upload cache file
      if: steps.detect-new.outputs.has-new-articles == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: rss-cache
        path: cache/rss-processed.json

    - name: Summary
      run: |
        echo "🔍 RSS Trigger Results:"
        echo "   New articles found: ${{ steps.detect-new.outputs.has-new-articles }}"
        echo "   Count: ${{ steps.detect-new.outputs.new-articles-count }}"
        if [ "${{ steps.detect-new.outputs.has-new-articles }}" = "true" ]; then
          echo "✅ Proceeding to Gemini analysis job"
        else
          echo "⏭️  No new articles, skipping downstream jobs"
        fi

  # Job2: Gemini分析 + JS処理 + Merge（n8nの複数ノードに対応）
  gemini-analysis:
    runs-on: ubuntu-latest
    needs: rss-trigger
    if: needs.rss-trigger.outputs.has-new-articles == 'true'
    outputs:
      analyzed-count: ${{ steps.process.outputs.analyzed-count }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Download new articles data
      uses: actions/download-artifact@v4
      with:
        name: new-articles
        path: .

    - name: Analyze articles with Gemini CLI
      id: analyze
      uses: google-github-actions/run-gemini-cli@v0.1.12
      with:
        gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
        gemini_model: gemini-2.5-flash
        settings: |
          {
            "coreTools": [
              "run_shell_command(cat)"
            ],
            "output": { "format": "json" }
          }
        prompt: |
          以下のJSONファイルを読み込んで、記事を分析してください。

          run_shell_command(cat, "new-articles.json")

          各記事について：
          - AI関連かAI以外かを判定
          - 簡潔な要約を作成

          以下のJSON形式で出力してください：
          {"articles":[{"title":"記事タイトル","link":"URL","pubDate":"日付","guid":"ID","category":"AI関連","summary":"要約"}]}

    - name: Export Gemini JSON to env
      run: |
        echo "GEMINI_JSON<<EOF" >> $GITHUB_ENV
        echo '${{ steps.analyze.outputs.summary }}' >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Validate analyzed JSON
      shell: bash
      run: |
        jq -e '
          type=="object" and has("articles") and (.articles|type=="array") and
          all(.articles[]; has("title") and has("link") and has("guid") and has("summary")
            and (.category=="AI関連" or .category=="AI以外"))
        ' <<< "$GEMINI_JSON" > /dev/null

    - name: Process analysis results
      id: process
      env:
        GEMINI_JSON: ${{ env.GEMINI_JSON }}
      run: node scripts/gemini-analyzer.js

    - name: Upload analyzed articles
      uses: actions/upload-artifact@v4
      with:
        name: analyzed-articles
        path: analyzed-articles.json

    - name: Analysis summary
      run: |
        echo "🤖 Gemini Analysis Results:"
        echo "   Total analyzed: ${{ steps.process.outputs.analyzed-count }}"
        echo "✅ Ready for Discord notification job"